// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.Models;

namespace eCommerce.Migrations
{
    [DbContext(typeof(ecommerceContext))]
    partial class ecommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Variantproduct", b =>
                {
                    b.Property<int>("productVariantVariantId")
                        .HasColumnType("int");

                    b.Property<int>("productVariantproductId")
                        .HasColumnType("int");

                    b.HasKey("productVariantVariantId", "productVariantproductId");

                    b.HasIndex("productVariantproductId");

                    b.ToTable("Variantproduct");
                });

            modelBuilder.Entity("eCommerce.Models.Variant", b =>
                {
                    b.Property<int>("VariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VariantId");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("eCommerce.Models.language", b =>
                {
                    b.Property<int>("languageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("nameLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("languageId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("eCommerce.Models.languageWord", b =>
                {
                    b.Property<int>("languageWordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Defaultword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("languageId")
                        .HasColumnType("int");

                    b.Property<string>("word")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("languageWordId");

                    b.HasIndex("languageId");

                    b.ToTable("LanguageWords");
                });

            modelBuilder.Entity("eCommerce.Models.product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("productId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("eCommerce.Models.variantValue", b =>
                {
                    b.Property<int>("variantValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("VariantId")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("variantValueId");

                    b.HasIndex("VariantId");

                    b.ToTable("VariantValues");
                });

            modelBuilder.Entity("Variantproduct", b =>
                {
                    b.HasOne("eCommerce.Models.Variant", null)
                        .WithMany()
                        .HasForeignKey("productVariantVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Models.product", null)
                        .WithMany()
                        .HasForeignKey("productVariantproductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCommerce.Models.languageWord", b =>
                {
                    b.HasOne("eCommerce.Models.language", "Language")
                        .WithMany("words")
                        .HasForeignKey("languageId");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("eCommerce.Models.variantValue", b =>
                {
                    b.HasOne("eCommerce.Models.Variant", "variant")
                        .WithMany("Values")
                        .HasForeignKey("VariantId");

                    b.Navigation("variant");
                });

            modelBuilder.Entity("eCommerce.Models.Variant", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("eCommerce.Models.language", b =>
                {
                    b.Navigation("words");
                });
#pragma warning restore 612, 618
        }
    }
}
